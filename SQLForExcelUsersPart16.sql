--
-- LEFT OUTER JOIN from Part 15 of the series. This code 
-- works just like an INNER JOIN!
-- 
SELECT E.EmployeeKey
      ,E.FirstName
      ,E.LastName
      ,SQ.SalesAmountQuota
FROM DimEmployee E 
    LEFT OUTER JOIN FactSalesQuota SQ ON (E.EmployeeKey = SQ.EmployeeKey)
WHERE E.EmployeeKey IN (271, 274, 275, 277, 282, 283) AND
      SQ.SalesAmountQuota IS NOT NULL



--
-- Our first INNER JOIN.
--
SELECT R.ResellerName 
      ,FRS.OrderDate
      ,FRS.SalesAmount
FROM FactResellerSales FRS
    INNER JOIN DimReseller R ON (FRS.ResellerKey = R.ResellerKey)



--
-- First step of the Pareto analysis - how many resellers
-- does AdventureWorks have?
--
SELECT COUNT(*) AS ResellerCount
FROM DimReseller;



--
-- Next up, what are the total sales of all resellers?
-- We'll use this the denominator in calculating what
-- % of all reseller sales is generated by each reseller.
--
SELECT SUM(FRS.SalesAmount) AS TotalResellerSales
FROM FactResellerSales FRS



--
-- Get the each reseller's lifetime sales.
--
SELECT R.ResellerName 
      ,SUM(FRS.SalesAmount) AS ResellerSales
FROM FactResellerSales FRS
    INNER JOIN DimReseller R ON (FRS.ResellerKey = R.ResellerKey)
GROUP BY R.ResellerName



--
-- SQL snippet that ain't legit, but is an interim step.
--
WITH TotalResellerSales AS
(
    SELECT SUM(FRS.SalesAmount) AS TotalResellerSales
    FROM FactResellerSales FRS 
),
ResllerSales AS
(
    SELECT R.ResellerName 
            ,SUM(FRS.SalesAmount) AS ResellerSales
    FROM FactResellerSales FRS
        INNER JOIN DimReseller R ON (FRS.ResellerKey = R.ResellerKey)
    GROUP BY R.ResellerName
)



--
-- List all resellers in descending order by their lifetime total
-- sales. Also, create a running total of all reseller sales. 
--
WITH TotalResellerSales AS
(
    SELECT SUM(FRS.SalesAmount) AS TotalResellerSales
    FROM FactResellerSales FRS 
),
ResllerSales AS
(
    SELECT R.ResellerName 
          ,SUM(FRS.SalesAmount) AS ResellerSales
    FROM FactResellerSales FRS
        INNER JOIN DimReseller R ON (FRS.ResellerKey = R.ResellerKey)
    GROUP BY R.ResellerName
)
SELECT RS.ResellerName
      ,RS.ResellerSales
      ,SUM(RS.ResellerSales) OVER (ORDER BY RS.ResellerSales DESC) AS CumProductSales
FROM ResllerSales RS
ORDER BY RS.ResellerSales DESC;



--
-- The final version of the query. Notice the use of a subquery in
-- calculating CumPctSales.
--
WITH TotalResellerSales AS
(
    SELECT SUM(FRS.SalesAmount) AS TotalResellerSales
    FROM FactResellerSales FRS 
),
ResllerSales AS
(
    SELECT R.ResellerName 
            ,SUM(FRS.SalesAmount) AS ResellerSales
    FROM FactResellerSales FRS
        INNER JOIN DimReseller R ON (FRS.ResellerKey = R.ResellerKey)
    GROUP BY R.ResellerName
)
SELECT RS.ResellerName
       ,RS.ResellerSales
       ,SUM(RS.ResellerSales) OVER (ORDER BY RS.ResellerSales DESC) AS CumProductSales
       ,SUM(RS.ResellerSales) OVER (ORDER BY RS.ResellerSales DESC) / (SELECT TotalResellerSales FROM TotalResellerSales) AS CumPctSales
FROM ResllerSales RS;

